@model HotelApp.Models.Bookings

@{
    ViewBag.Title = "_book";
}
<style>
    body {
        background-color:#E8E8E8 ;
    }
</style>
<h2>Book a room</h2>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.message != null)
        {
            <div class="form-group">
                <div class="col-md-10">
                    @ViewBag.message
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.smoking, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.smoking)
                    @Html.ValidationMessageFor(model => model.smoking, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.petFriendly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.petFriendly)
                    @Html.ValidationMessageFor(model => model.petFriendly, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.checkIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.checkIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.checkIn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.checkOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.checkOut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.checkOut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.roomType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.roomType, new List<SelectListItem>{

                       new SelectListItem {Value="1",Text="single" },
                       new SelectListItem {Value="2",Text="double" },
                       new SelectListItem {Value="3",Text="family" },
                       new SelectListItem {Value="4",Text="kids" },
                        }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.roomType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numberOfBed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.numberOfBed, new List<SelectListItem>{

                       new SelectListItem {Value="1",Text="1" },
                       new SelectListItem {Value="2",Text="2" },
                       new SelectListItem {Value="3",Text="3" },
                       new SelectListItem {Value="4",Text="4" },
                       new SelectListItem {Value="5",Text="5" }, }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.numberOfBed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gusID, "gusID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("gusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.gusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <ul>
                <li>[single]You must pay 150 pound after discount</li>
                <li>[double]You must pay 300 pound after discount</li>
                <li>[family]You must pay 450 pound after discount</li>
                <li>[kids]You must pay 225 pound after discount</li>
            </ul>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.confirmPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.confirmPay)
                    @Html.ValidationMessageFor(model => model.confirmPay, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="book" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to the options", "loggedIn")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
